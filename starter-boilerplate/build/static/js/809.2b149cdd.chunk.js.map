{"version":3,"file":"static/js/809.2b149cdd.chunk.js","mappings":"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","sources":["views/app-views/main/Dashboard.js","views/app-views/main/CatalogProducts.js","views/app-views/main/CatalogCategories.js","views/app-views/main/CatalogCollections.js","views/app-views/main/CatalogCombo.js","views/app-views/main/Orders.js","views/app-views/main/ClientList.js","views/app-views/main/ClientGroups.js","views/app-views/main/EditProfile.js","views/app-views/main/Banners.js","views/app-views/main/Promo.js","views/app-views/main/OfflineAddresses.js","views/app-views/main/OfflineGeozones.js","views/app-views/main/Employees.js","views/app-views/main/Spam.js","views/app-views/main/LayoutScheme.js","views/app-views/main/index.js"],"sourcesContent":["import React from 'react';\n\nconst Dashboard = () => {\n  return <div>Это страница Дашборд</div>;\n};\n\nexport default Dashboard;\n","import React from 'react';\n\nconst CatalogProducts = () => {\n  return <h1>Это страница Товары</h1>;\n};\n\nexport default CatalogProducts;\n","import React from 'react';\n\nconst CatalogCategories = () => {\n  return <h1>Это страница Категории</h1>;\n};\n\nexport default CatalogCategories;\n","import React from 'react';\n\nconst CatalogCollections = () => {\n  return <h1>Это страница Коллекции</h1>;\n};\n\nexport default CatalogCollections;\n","import React from 'react';\n\nconst CatalogCombo = () => {\n  return <h1>Это страница Комбо</h1>;\n};\n\nexport default CatalogCombo;\n","import React from 'react';\n\nconst Orders = () => {\n  return <h1>Это страница Заказы</h1>;\n};\n\nexport default Orders;\n","import React, { useState, useEffect } from 'react';\nimport { Table} from 'antd';\nimport { Link } from 'react-router-dom';\nimport { API_USER_URL } from \"../../../configs/AppConfig\";\nimport Loading from \"../../../components/shared-components/Loading\";\n\nconst ClientList = () => {\n  const [clients, setClients] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`${API_USER_URL}/users`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Ошибка загрузки данных');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setClients(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Произошла ошибка:', error.message);\n        setLoading(false);\n      });\n  }, []);\n\n  const columns = [\n    { title: '№', dataIndex: 'id', key: 'id' },\n    { title: 'Имя', dataIndex: 'name', key: 'name' },\n    { title: 'Email', dataIndex: 'email', key: 'email' },\n    { title: 'Телефон', dataIndex: 'phone', key: 'phone' },\n    {\n      title: 'Адрес',\n      key: 'address',\n      render: (text, record) => (\n        <span>{record.address.street}, {record.address.suite}</span>\n      ),\n    },\n    {\n      title: 'Действия',\n      key: 'action',\n      render: (text, record) => {\n        return (\n          <Link to={`/app/main/clients/edit/${record.id}`}>\n            <button className=\"edit-btn\">Редактировать</button>\n          </Link>\n        );\n      },\n    }\n  ];\n\n  return (\n    <div>\n      <h2>Список клиентов</h2>\n      {loading ? (\n        <Loading cover=\"content\"/>\n      ) : (\n        <Table columns={columns} dataSource={clients} rowKey=\"id\" />\n      )}\n    </div>\n  );\n};\n\nexport default ClientList;\n","import React from 'react';\n\nconst ClientGroups = () => {\n  return <h1>Это страница Группа клиентов</h1>;\n};\n\nexport default ClientGroups;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Avatar, Button, Input, DatePicker, Row, Col, message, Upload, Spin } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { ROW_GUTTER } from 'constants/ThemeConstant';\nimport Flex from 'components/shared-components/Flex';\n\nconst EditProfile = () => {\n  const { id } = useParams(); // Получаем ID пользователя из URL\n  const history = useHistory();\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    username: '',\n    phone: '',\n    website: '',\n    address: '',\n    city: '',\n    postcode: '',\n    avatarUrl: '/img/avatars/thumb-6.jpg', // Заглушка\n  });\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`https://jsonplaceholder.typicode.com/users/${id}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Ошибка загрузки пользователя');\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log('Полученные данные:', data); // Отладка\n        setUser({\n          name: data.name,\n          email: data.email,\n          username: data.username,\n          phone: data.phone,\n          website: data.website,\n          address: data.address.street,\n          city: data.address.city,\n          postcode: data.address.zipcode,\n          avatarUrl: '/img/avatars/thumb-6.jpg',\n        });\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Произошла ошибка:', error.message);\n        setLoading(false);\n      });\n  }, [id]);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    message.loading({ content: 'Сохранение...', key: 'save' });\n    setTimeout(() => {\n      setLoading(false);\n      message.success({ content: 'Сохранено!', key: 'save', duration: 2 });\n      history.push('/app/main/clients/list');\n    }, 1000);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const onUploadAvatar = (info) => {\n    if (info.file.status === 'done') {\n      message.success({ content: 'Аватар загружен!', duration: 1.5 });\n    }\n  };\n\n  const onRemoveAvatar = () => {\n    setUser({ ...user, avatarUrl: '' });\n  };\n\n  return (\n    <>\n      {loading && <Spin size=\"large\" style={{ display: 'block', textAlign: 'center', marginTop: 50 }} />}\n      {!loading && (\n        <>\n          <Flex alignItems=\"center\" mobileFlex={false} className=\"text-center text-md-left\">\n            <Avatar size={90} src={user.avatarUrl} icon={<UserOutlined />} />\n            <div className=\"ml-md-3 mt-md-0 mt-3\">\n              <Upload onChange={onUploadAvatar} showUploadList={false} action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\">\n                <Button type=\"primary\">Изменить аватар</Button>\n              </Upload>\n              <Button className=\"ml-2\" onClick={onRemoveAvatar}>Удалить</Button>\n            </div>\n          </Flex>\n          <div className=\"mt-4\">\n            <Form\n              name=\"basicInformation\"\n              layout=\"vertical\"\n              initialValues={user}\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n            >\n              <Row>\n                <Col xs={24} sm={24} md={24} lg={16}>\n                  <Row gutter={ROW_GUTTER}>\n                    <Col xs={24} sm={24} md={12}>\n                      <Form.Item\n                        label=\"Имя\"\n                        name=\"name\"\n                        rules={[{ required: true, message: 'Введите имя!' }]}\n                      >\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col xs={24} sm={24} md={12}>\n                      <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[{ required: true, message: 'Введите username!' }]}\n                      >\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col xs={24} sm={24} md={12}>\n                      <Form.Item\n                        label=\"Email\"\n                        name=\"email\"\n                        rules={[{ required: true, type: 'email', message: 'Введите корректный email!' }]}\n                      >\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col xs={24} sm={24} md={12}>\n                      <Form.Item\n                        label=\"Телефон\"\n                        name=\"phone\"\n                      >\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col xs={24} sm={24} md={12}>\n                      <Form.Item\n                        label=\"Веб-сайт\"\n                        name=\"website\"\n                      >\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col xs={24} sm={24} md={24}>\n                      <Form.Item\n                        label=\"Адрес\"\n                        name=\"address\"\n                      >\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col xs={24} sm={24} md={12}>\n                      <Form.Item\n                        label=\"Город\"\n                        name=\"city\"\n                      >\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col xs={24} sm={24} md={12}>\n                      <Form.Item\n                        label=\"Почтовый индекс\"\n                        name=\"postcode\"\n                      >\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                  <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n                    Сохранить изменения\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default EditProfile;\n","import React from 'react';\n\nconst Banners = () => {\n  return <h1>Это страница Баннеры</h1>;\n};\n\nexport default Banners;\n","import React from 'react';\n\nconst Promo = () => {\n  return <h1>Это страница Промокоды</h1>;\n};\n\nexport default Promo;\n","import React from 'react';\n\nconst OfflineAddresses = () => {\n  return <h1>Это страница Адреса</h1>;\n};\n\nexport default OfflineAddresses;\n","import React from 'react';\n\nconst OfflineGeozones = () => {\n  return <h1>Это страница Геозоны</h1>;\n};\n\nexport default OfflineGeozones;\n","import React from 'react';\n\nconst Employees = () => {\n  return <h1>Это страница Сотрудники</h1>;\n};\n\nexport default Employees;\n","import React from 'react';\n\nconst Spam = () => {\n  return <h1>Это страница Рассылка</h1>;\n};\n\nexport default Spam;\n","import React, { useState } from 'react';\nimport './style/LayoutScheme.css';\n\nconst LayoutScheme = () => {\n  const objects = [\n    { id: 'chair', name: 'Стул', image: '/img/object/chair.png' },\n    { id: 'table', name: 'Стол', image: '/img/object/table.png' },\n    { id: 'table_plus_chair', name: 'Стол и стул', image: '/img/object/table_plus_chair.png' },\n    { id: 'wall', name: 'Стена', image: '/img/object/wall.png' },\n  ];\n\n  const [placedObjects, setPlacedObjects] = useState([]);\n\n  const handleSave = () => {\n    const data = JSON.stringify(placedObjects);\n    const blob = new Blob([data], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'layout.json';\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const handleLoad = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        const loadedObjects = JSON.parse(event.target.result);\n        setPlacedObjects(loadedObjects);\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  return (\n    <div className=\"layout-scheme-container\">\n      <h2>Планировщик зала</h2>\n      <div className=\"controls\">\n        <button onClick={handleSave}>Сохранить расстановку</button>\n        <label className=\"upload-btn\">\n          Загрузить расстановку\n          <input type=\"file\" accept=\".json\" onChange={handleLoad} />\n        </label>\n      </div>\n      <div className=\"layout-content\">\n        <div className=\"objects-panel\">\n          <h3>Объекты</h3>\n          {objects.map((obj) => (\n            <div\n              key={obj.id}\n              className=\"object-item\"\n              draggable\n              onDragStart={(e) => {\n                e.dataTransfer.setData('object', JSON.stringify(obj));\n              }}\n            >\n              <img src={obj.image} alt={obj.name} className=\"object-image\" />\n              <p>{obj.name}</p>\n            </div>\n          ))}\n        </div>\n        <div\n          className=\"board\"\n          onDrop={(e) => {\n            e.preventDefault();\n            const data = e.dataTransfer.getData('object');\n            if (data) {\n              try {\n                const obj = JSON.parse(data);\n                const boardRect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - boardRect.left;\n                const y = e.clientY - boardRect.top;\n                console.log('Dropped at:', x, y);\n                setPlacedObjects([...placedObjects, { ...obj, x, y }]);\n              } catch (error) {\n                console.error('Error parsing object:', error);\n              }\n            }\n          }}\n          onDragOver={(e) => e.preventDefault()}\n        >\n          {placedObjects.map((placed, index) => (\n            <div\n              key={`${placed.id}-${index}`}\n              className=\"placed-object\"\n              style={{ left: `${placed.x}px`, top: `${placed.y}px`, position: 'absolute' }}\n              draggable\n              onDragStart={(e) => {\n                e.dataTransfer.setData('index', index);\n              }}\n              onDragEnd={(e) => {\n                const boardRect = e.currentTarget.parentElement.getBoundingClientRect();\n                const newX = e.clientX - boardRect.left;\n                const newY = e.clientY - boardRect.top;\n                console.log('Drag end at:', newX, newY);\n                const newObjects = [...placedObjects];\n                newObjects[index] = { ...newObjects[index], x: newX, y: newY };\n                setPlacedObjects(newObjects);\n              }}\n            >\n              <img src={placed.image} alt={placed.name} className=\"object-image\" />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LayoutScheme;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport CatalogProducts from \"./CatalogProducts\";\nimport CatalogCategories from \"./CatalogCategories\";\nimport CatalogCollections from \"./CatalogCollections\";\nimport CatalogCombo from \"./CatalogCombo\";\nimport Orders from \"./Orders\";\nimport ClientList from \"./ClientList\";\nimport ClientGroups from \"./ClientGroups\";\nimport EditProfile from \"./EditProfile\";\nimport Banners from \"./Banners\";\nimport Promo from \"./Promo\";\nimport OfflineAddresses from \"./OfflineAddresses\";\nimport OfflineGeozones from \"./OfflineGeozones\";\nimport Employees from \"./Employees\";\nimport Spam from \"./Spam\";\nimport LayoutScheme from \"./LayoutScheme\";\n\nconst MainViews = () => {\n  return (\n    <Switch>\n      <Route path=\"/app/main/dashboards\" component={Dashboard} />\n      <Route path='/app/main/LayoutScheme' component={LayoutScheme} />\n      <Route path=\"/app/main/catalog/products\" component={CatalogProducts} />\n      <Route path=\"/app/main/catalog/categories\" component={CatalogCategories} />\n      <Route path=\"/app/main/catalog/collections\" component={CatalogCollections} />\n      <Route path=\"/app/main/catalog/combo\" component={CatalogCombo} />\n      <Route path=\"/app/main/orders\" component={Orders} />\n      <Route path=\"/app/main/clients/list\" component={ClientList} />\n      <Route path=\"/app/main/clients/groups\" component={ClientGroups} />\n      <Route path=\"/app/main/clients/edit/:id\" component={EditProfile} />\n      <Route path=\"/app/main/banners\" component={Banners} />\n      <Route path=\"/app/main/promo\" component={Promo} />\n      <Route path=\"/app/main/offline/addresses\" component={OfflineAddresses} />\n      <Route path=\"/app/main/offline/geozones\" component={OfflineGeozones} />\n      <Route path=\"/app/main/employees\" component={Employees} />\n      <Route path=\"/app/main/spam\" component={Spam} />\n    </Switch>\n  );\n};\n\nexport default MainViews;\n"],"names":["Dashboard","_jsx","children","CatalogProducts","CatalogCategories","CatalogCollections","CatalogCombo","Orders","ClientList","clients","setClients","useState","loading","setLoading","useEffect","fetch","API_USER_URL","then","response","ok","Error","json","data","catch","error","console","message","columns","title","dataIndex","key","render","text","record","_jsxs","address","street","suite","Link","to","id","className","Loading","cover","Table","dataSource","rowKey","ClientGroups","EditProfile","useParams","history","useHistory","user","setUser","name","email","username","phone","website","city","postcode","avatarUrl","log","zipcode","_Fragment","Spin","size","style","display","textAlign","marginTop","Flex","alignItems","mobileFlex","Avatar","src","icon","UserOutlined","Upload","onChange","info","file","status","success","content","duration","showUploadList","action","Button","type","onClick","onRemoveAvatar","Form","layout","initialValues","onFinish","values","setTimeout","push","onFinishFailed","errorInfo","Row","Col","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","Input","htmlType","Banners","Promo","OfflineAddresses","OfflineGeozones","Employees","Spam","LayoutScheme","placedObjects","setPlacedObjects","handleSave","JSON","stringify","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","accept","e","target","files","reader","FileReader","onload","event","loadedObjects","parse","result","readAsText","image","map","obj","draggable","onDragStart","dataTransfer","setData","alt","onDrop","preventDefault","getData","boardRect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","onDragOver","placed","index","position","onDragEnd","parentElement","newX","newY","newObjects","MainViews","Switch","Route","path","component"],"sourceRoot":""}